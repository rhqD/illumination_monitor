{"version":3,"sources":["App.js","index.js"],"names":["echarts","require","baseOption","title","text","tooltip","trigger","formatter","params","date","Date","name","getDate","getMonth","getFullYear","getHours","getMinutes","value","axisPointer","animation","xAxis","type","splitLine","show","yAxis","boundaryGap","series","showSymbol","hoverAnimation","App","containerRef","useRef","myCharts","useEffect","current","init","fetch","then","resp","json","data","map","it","time","toString","setOption","className","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKAEMA,EAAUC,EAAQ,IAElBC,EAAa,CACjBC,MAAO,CACLC,KAAM,6DAERC,QAAS,CACPC,QAAS,OACTC,UAAW,SAAUC,GACnBA,EAASA,EAAO,GAChB,IAAIC,EAAO,IAAIC,KAAKF,EAAOG,MAC3B,OAAOF,EAAKG,UAAY,KAAOH,EAAKI,WAAa,GAAK,IAAMJ,EAAKK,cAAgB,KAAOL,EAAKM,WAAa,MAAQN,EAAKO,aAAhHP,OAA6ID,EAAOS,MAAM,IAEnKC,YAAa,CACXC,WAAW,IAGfC,MAAO,CACLC,KAAM,OACNC,UAAW,CACTC,MAAM,IAGVC,MAAO,CACLH,KAAM,QACNI,YAAa,CAAC,EAAG,QACjBH,UAAW,CACTC,MAAM,IAGVG,OAAQ,CAAC,CACPf,KAAM,2BACNU,KAAM,OACNM,YAAY,EACZC,gBAAgB,KA8BLC,MA1Bf,WACE,IAAMC,EAAeC,mBACfC,EAAWD,mBAiBjB,OAhBAE,qBAAU,WACRD,EAASE,QAAUlC,EAAQmC,KAAKL,EAAaI,SAC7CE,MAAM,SAASC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAAQF,MAAK,YAAe,IAAZG,EAAW,EAAXA,KAC/CtC,EAAWwB,OAAO,GAAGc,KAAOA,EAAKC,KAAI,SAAAC,GACnC,IAAMC,EAAO,IAAIjC,KAAKgC,EAAGC,MACzB,MAAO,CACLhC,KAAMgC,EAAKC,WACX3B,MAAO,CACH0B,EACA,EAAID,EAAGzB,WAIfe,EAASE,QAAQW,UAAU3C,SAI7B,qBAAK4C,UAAU,MAAMC,IAAKjB,KCvD9BkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.b319ed09.chunk.js","sourcesContent":["import { useRef, useEffect } from \"react\";\nimport \"./App.css\";\nconst echarts = require(\"echarts\");\n\nconst baseOption = {\n  title: {\n    text: '动态数据 + 时间坐标轴'\n  },\n  tooltip: {\n    trigger: 'axis',\n    formatter: function (params) {\n      params = params[0];\n      var date = new Date(params.name);\n      return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + '  ' + date.getHours() + ' : ' + date.getMinutes() + ' ' + ' : ' + params.value[1];\n    },\n    axisPointer: {\n      animation: false\n    }\n  },\n  xAxis: {\n    type: 'time',\n    splitLine: {\n      show: false\n    }\n  },\n  yAxis: {\n    type: 'value',\n    boundaryGap: [0, '100%'],\n    splitLine: {\n      show: false\n    }\n  },\n  series: [{\n    name: '模拟数据',\n    type: 'line',\n    showSymbol: false,\n    hoverAnimation: false,\n  }]\n};\n\nfunction App() {\n  const containerRef = useRef();\n  const myCharts = useRef();\n  useEffect(() => {\n    myCharts.current = echarts.init(containerRef.current);\n    fetch('/data').then(resp => resp.json()).then(({ data }) => {\n      baseOption.series[0].data = data.map(it => {\n        const time = new Date(it.time);\n        return {\n          name: time.toString(),\n          value: [\n              time,\n              0 - it.value\n          ]\n        };\n      });\n      myCharts.current.setOption(baseOption);\n    });\n  });\n  return (\n    <div className=\"App\" ref={containerRef}>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}